"""initial_migration

Revision ID: 0001
Revises: 
Create Date: 2024-12-19 14:16:52.707937

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = "0001"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "context_types",
        sa.Column("system_name", sa.String(length=20), nullable=False, comment="Системное имя контекста"),
        sa.Column(
            "display_name", sa.String(length=20), nullable=False, comment="Имя контекста для отображения пользователю"
        ),
        sa.Column("id", sa.SMALLINT(), nullable=False, comment="Идентификатор"),
        sa.PrimaryKeyConstraint("id"),
        comment="Классификатор типа контекста.",
    )
    op.create_table(
        "event_types",
        sa.Column("system_name", sa.String(length=20), nullable=False, comment="Системное название события"),
        sa.Column("event_display_string", sa.String(length=255), nullable=False, comment="Строка для вывода события"),
        sa.Column("id", sa.SMALLINT(), nullable=False, comment="Идентификатор"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("system_name"),
        comment="Классификатор событий для записи в логе.",
    )
    op.create_table(
        "project_types",
        sa.Column("name", sa.String(length=30), nullable=False, comment="Название типа проекта"),
        sa.Column("id", sa.SMALLINT(), nullable=False, comment="Идентификатор"),
        sa.PrimaryKeyConstraint("id"),
        comment="Классификатор типов проектов.",
    )
    op.create_table(
        "task_link_types",
        sa.Column("status", sa.String(length=30), nullable=False, comment="Статус"),
        sa.Column("invert_status", sa.String(length=30), nullable=False, comment="Обратный статус"),
        sa.Column("id", sa.SMALLINT(), nullable=False, comment="Идентификатор"),
        sa.PrimaryKeyConstraint("id"),
        comment="Классификатор типов связи задач.",
    )
    op.create_table(
        "timezones",
        sa.Column("display_name", sa.String(length=30), nullable=False, comment="Отображаемое имя часового пояса"),
        sa.Column("iana_name", sa.String(length=256), nullable=False, comment="Наименование IANA часового пояса"),
        sa.Column("id", sa.SMALLINT(), nullable=False, comment="Идентификатор"),
        sa.PrimaryKeyConstraint("id"),
        comment="Классификатор часовых поясов.",
    )
    op.create_table(
        "companies",
        sa.Column("name", sa.String(), nullable=False, comment="Наименование организации"),
        sa.Column("description", sa.String(), nullable=True, comment="Описание организации"),
        sa.Column("subdomain", sa.String(length=50), nullable=False, comment="Субдомен организации"),
        sa.Column("timezone_id", sa.SMALLINT(), nullable=False, comment="Идентификатор таймзоны"),
        sa.Column("logo", sa.String(), nullable=True, comment="Логотип организации"),
        sa.Column(
            "scheduled_deletion_date", sa.TIMESTAMP(), nullable=True, comment="Дата запланированного удаления компании"
        ),
        sa.Column("active", sa.Boolean(), server_default=sa.text("true"), nullable=False, comment="Компания активна"),
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False, comment="Идентификатор"
        ),
        sa.ForeignKeyConstraint(["timezone_id"], ["timezones.id"], ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("subdomain"),
        comment="Модель компании.",
    )
    op.create_table(
        "permissions",
        sa.Column("context_type_id", sa.SMALLINT(), nullable=False, comment="Идентификатор типа контекста"),
        sa.Column("system_name", sa.String(length=20), nullable=False, comment="Системное имя разрешения"),
        sa.Column("display_name", sa.String(length=50), nullable=False, comment="Имя разрешения для пользователя"),
        sa.Column("id", sa.SMALLINT(), nullable=False, comment="Идентификатор"),
        sa.ForeignKeyConstraint(["context_type_id"], ["context_types.id"], ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("display_name", "context_type_id", name="uq_display_name_context_type"),
        sa.UniqueConstraint("system_name"),
        comment="Классификатор возможных прав",
    )
    op.create_table(
        "users",
        sa.Column("email", sa.String(length=100), nullable=False, comment="Почта"),
        sa.Column("username", sa.String(length=30), nullable=False, comment="Имя пользователя"),
        sa.Column("hashed_password", sa.String(), nullable=True, comment="Хеш пароля"),
        sa.Column("phone", sa.String(length=30), nullable=True, comment="Номер телефона"),
        sa.Column("display_name", sa.String(length=60), nullable=False, comment="Имя для отображения"),
        sa.Column("image", sa.String(), nullable=True, comment="Путь к файлу изображения пользователя"),
        sa.Column("timezone_id", sa.SMALLINT(), nullable=True, comment="Идентификатор таймзоны"),
        sa.Column(
            "is_bot",
            sa.Boolean(),
            server_default=sa.text("false"),
            nullable=False,
            comment="Является ли пользователь ботом",
        ),
        sa.Column(
            "active", sa.Boolean(), server_default="true", nullable=False, comment="Активен ли аккаунт пользователя"
        ),
        sa.Column("scheduled_deletion_date", sa.TIMESTAMP(), nullable=True, comment="Запланированная дата удаления"),
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False, comment="Идентификатор"
        ),
        sa.ForeignKeyConstraint(["timezone_id"], ["timezones.id"], ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("image"),
        sa.UniqueConstraint("username"),
        comment="Модель пользователя.",
    )
    op.create_table(
        "channels_groups",
        sa.Column("name", sa.String(length=30), nullable=False, comment="Имя группы"),
        sa.Column("description", sa.String(), nullable=False, comment="Описание группы"),
        sa.Column("parent_channel_group_id", sa.Uuid(), nullable=True, comment="Родительская группа каналов"),
        sa.Column(
            "permissions_parent_channel_group_id",
            sa.Uuid(),
            nullable=True,
            comment="Группа каналов от которой наследуются права",
        ),
        sa.Column("company_id", sa.Uuid(), nullable=False, comment="Идентификатор организации"),
        sa.Column("system", sa.Boolean(), nullable=False, comment="Является системной"),
        sa.Column("order", sa.SMALLINT(), nullable=False, comment="Порядок при сортировке"),
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False, comment="Идентификатор"
        ),
        sa.ForeignKeyConstraint(["company_id"], ["companies.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["parent_channel_group_id"], ["channels_groups.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["permissions_parent_channel_group_id"], ["channels_groups.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "company_id", name="uq_channels_group_name"),
        comment="Группы каналов",
    )
    op.create_table(
        "files",
        sa.Column("company_id", sa.Uuid(), nullable=False, comment="Идентификатор компании"),
        sa.Column("author_id", sa.Uuid(), nullable=False, comment="Идентификатор автора файла"),
        sa.Column("download_file_name", sa.String(), nullable=False, comment="Имя файла при скачивание"),
        sa.Column("file_name", sa.String(), nullable=False, comment="Системное имя файла"),
        sa.Column("size", sa.BIGINT(), nullable=False, comment="Размер файла"),
        sa.Column("created_at", sa.TIMESTAMP(), nullable=False, comment="Время создания"),
        sa.Column("updated_at", sa.TIMESTAMP(), nullable=True, comment="Время последнего обновления"),
        sa.Column("checksum", sa.String(length=64), nullable=False, comment="Чексумма файла"),
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False, comment="Идентификатор"
        ),
        sa.ForeignKeyConstraint(["author_id"], ["users.id"], ondelete="SET DEFAULT"),
        sa.ForeignKeyConstraint(["company_id"], ["companies.id"], ondelete="SET DEFAULT"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("file_name"),
        comment="Файлы.",
    )
    op.create_table(
        "icons",
        sa.Column("company_id", sa.Uuid(), nullable=True, comment="Идентификатор организации"),
        sa.Column("file_name", sa.String(), nullable=False, comment="Имя файла"),
        sa.Column(
            "icon_category_id",
            sa.Enum("TASK_TYPE", "FILE_GROUP", "PROJECT", name="icon_category"),
            nullable=False,
            comment="Категория иконок",
        ),
        sa.Column("id", sa.BIGINT(), nullable=False, comment="Идентификатор"),
        sa.ForeignKeyConstraint(["company_id"], ["companies.id"], ondelete="SET DEFAULT"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("file_name"),
        comment="Пополняемый классификатор для хранения ссылок на иконки.",
    )
    op.create_table(
        "logs",
        sa.Column("user_id", sa.Uuid(), nullable=False, comment="Идентификатор пользователя создавшего событие"),
        sa.Column("event_type_id", sa.SMALLINT(), nullable=False, comment="Идентификатор события"),
        sa.Column(
            "company_id", sa.Uuid(), nullable=False, comment="Идентификатор организации с которой связано событие"
        ),
        sa.Column("old_value", sa.String(), nullable=False, comment="Значение до изменения"),
        sa.Column("new_value", sa.String(), nullable=False, comment="Значение после изменения"),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("context_type_id", sa.SMALLINT(), nullable=False, comment="Тип контекста события"),
        sa.Column("object_id", sa.Uuid(), nullable=False, comment="Идентификатор объекта с которым произошло событие"),
        sa.Column("id", sa.BIGINT(), nullable=False, comment="Идентификатор"),
        sa.ForeignKeyConstraint(["company_id"], ["companies.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["context_type_id"], ["context_types.id"], ondelete="RESTRICT"),
        sa.ForeignKeyConstraint(["event_type_id"], ["event_types.id"], ondelete="RESTRICT"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="SET DEFAULT"),
        sa.PrimaryKeyConstraint("id"),
        comment="Модель для хранения логов приложения.",
    )
    op.create_table(
        "roles",
        sa.Column("name", sa.String(length=30), nullable=False, comment="Название роли"),
        sa.Column("company_id", sa.Uuid(), nullable=True, comment="Идентификатор компании управляющей ролью"),
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False, comment="Идентификатор"
        ),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("company_id", "name", name="uq_role_company"),
        comment="Классификатор ролей",
    )
    op.create_table(
        "subject_permissions_to_object",
        sa.Column("subject_id", sa.Uuid(), nullable=False, comment="Идентификатор субъекта (роли или пользователя)"),
        sa.Column("subject_type", sa.Enum("ROLE", "USER", name="subject_type"), nullable=False, comment="Тип субъекта"),
        sa.Column("permission_id", sa.SMALLINT(), nullable=False, comment="Идентификатор разрешения"),
        sa.Column(
            "object_id", sa.Uuid(), nullable=False, comment="Идентификатор объекта на который действует разрешение"
        ),
        sa.Column("id", sa.BIGINT(), nullable=False, comment="Идентификатор"),
        sa.ForeignKeyConstraint(["permission_id"], ["permissions.id"], ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("permission_id", "subject_id", "object_id", name="uq_subject_permission_to_object"),
        comment="Права субъекта на объект",
    )
    op.create_table(
        "user_company_membership",
        sa.Column("user_id", sa.Uuid(), nullable=False, comment="Идентификатор пользователя"),
        sa.Column("company_id", sa.Uuid(), nullable=False, comment="Идентификатор организации"),
        sa.Column("id", sa.BIGINT(), nullable=False, comment="Идентификатор"),
        sa.ForeignKeyConstraint(["company_id"], ["companies.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "company_id", name="uq_user_company"),
        comment="Членство пользователя в организации",
    )
    op.create_table(
        "channels",
        sa.Column("name", sa.String(length=30), nullable=True, comment="Название канала"),
        sa.Column("description", sa.String(), nullable=False, comment="Описание канала"),
        sa.Column("channel_group_id", sa.Uuid(), nullable=False, comment="Идентификатор группы каналов"),
        sa.Column(
            "permissions_parent_channel_group_id",
            sa.Uuid(),
            nullable=False,
            comment="Группа каналов от которой наследуются права на канал",
        ),
        sa.Column("company_id", sa.Uuid(), nullable=True, comment="Идентификатор компании"),
        sa.Column("order", sa.SMALLINT(), nullable=False, comment="Порядок при сортировке"),
        sa.Column("system", sa.Boolean(), nullable=False, comment="Системный канал"),
        sa.Column("private", sa.Boolean(), nullable=False, comment="Приватный чат"),
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False, comment="Идентификатор"
        ),
        sa.ForeignKeyConstraint(["channel_group_id"], ["channels_groups.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["company_id"], ["companies.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["permissions_parent_channel_group_id"], ["channels_groups.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "company_id", name="uq_channel_name"),
        comment="Каналы",
    )
    op.create_table(
        "messages",
        sa.Column("content", sa.String(), nullable=False, comment="Содержимое сообщения"),
        sa.Column("channel_id", sa.Uuid(), nullable=True, comment="Идентификатор канала"),
        sa.Column("thread_id", sa.BIGINT(), nullable=True, comment="Идентификатор треда"),
        sa.Column("user_id", sa.Uuid(), nullable=False, comment="Идентификатор пользователя"),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Время создания сообщения",
        ),
        sa.Column("updated_at", sa.TIMESTAMP(), nullable=True, comment="Время последнего изменения сообщения"),
        sa.Column("quoted_message_id", sa.BIGINT(), nullable=False, comment="Идентификатор цитируемого сообщения"),
        sa.Column(
            "is_deleted",
            sa.Boolean(),
            server_default=sa.text("false"),
            nullable=False,
            comment="Сообщение помечено как удаленное",
        ),
        sa.Column("id", sa.BIGINT(), nullable=False, comment="Идентификатор"),
        sa.ForeignKeyConstraint(["channel_id"], ["channels.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["quoted_message_id"], ["messages.id"], ondelete="SET DEFAULT"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="SET DEFAULT"),
        sa.PrimaryKeyConstraint("id"),
        comment="Модель сообщения.",
    )
    op.create_table(
        "threads",
        sa.Column("parent_message_id", sa.BIGINT(), nullable=False),
        sa.Column("title", sa.String(), nullable=False, comment="Заголовок треда"),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Время создания треда",
        ),
        sa.Column("channel_id", sa.Uuid(), nullable=False, comment="Идентификатор канала"),
        sa.Column("id", sa.BIGINT(), nullable=False, comment="Идентификатор"),
        sa.ForeignKeyConstraint(["channel_id"], ["channels.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        comment="Модель для хранения тредов.",
    )
    op.create_table(
        "company_users_roles",
        sa.Column("company_id", sa.Uuid(), nullable=False, comment="Идентификатор организации"),
        sa.Column("user_id", sa.Uuid(), nullable=False, comment="Идентификатор пользователя"),
        sa.Column("role_id", sa.Uuid(), nullable=False, comment="Идентификатор роли"),
        sa.Column("id", sa.BIGINT(), nullable=False, comment="Идентификатор"),
        sa.ForeignKeyConstraint(["company_id"], ["companies.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["role_id"], ["roles.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("company_id", "user_id", "role_id", name="uq_company_user_role"),
        comment="Роли пользователей в компании",
    )
    op.create_table(
        "files_groups",
        sa.Column("name", sa.String(length=255), nullable=False, comment="Имя группы файлов"),
        sa.Column("description", sa.String(), nullable=True, comment="Описание группы файлов"),
        sa.Column("icon_id", sa.BIGINT(), nullable=False, comment="Иконка группы файлов"),
        sa.Column("company_id", sa.Uuid(), nullable=False, comment="Идентификатор организации"),
        sa.Column("parent_file_group_id", sa.Uuid(), nullable=True, comment="Родительская группа файлов"),
        sa.Column(
            "permissions_parent_file_group_id",
            sa.Uuid(),
            nullable=True,
            comment="Группа файлов от которой наследуются права",
        ),
        sa.Column("can_change_permissions", sa.Boolean(), nullable=False, comment="Можно ли у группы менять права"),
        sa.Column("can_delete", sa.Boolean(), nullable=False, comment="Можно ли удалять группу"),
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False, comment="Идентификатор"
        ),
        sa.ForeignKeyConstraint(["company_id"], ["companies.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["icon_id"], ["icons.id"], ondelete="SET DEFAULT"),
        sa.ForeignKeyConstraint(["parent_file_group_id"], ["files_groups.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["permissions_parent_file_group_id"], ["files_groups.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "company_id", name="uq_file_group_name"),
        comment="Группы файлов",
    )
    op.create_table(
        "message_attachments",
        sa.Column("message_id", sa.BIGINT(), nullable=False, comment="Идентификатор сообщения"),
        sa.Column("file_id", sa.Uuid(), nullable=False, comment="Идентификатор файла"),
        sa.Column("id", sa.BIGINT(), nullable=False, comment="Идентификатор"),
        sa.ForeignKeyConstraint(["file_id"], ["files.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["message_id"], ["messages.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("message_id", "file_id", name="uq_message_attachment"),
        comment="Файлы прикрепленные к сообщению в чате",
    )
    op.create_table(
        "projects",
        sa.Column("name", sa.String(length=255), nullable=False, comment="Название проекта"),
        sa.Column("prefix", sa.String(length=50), nullable=False, comment="Префикс проекта"),
        sa.Column("description", sa.String(), nullable=True, comment="Описание проекта"),
        sa.Column("company_id", sa.Uuid(), nullable=False, comment="Идентификатор организации"),
        sa.Column("icon_id", sa.BIGINT(), nullable=False, comment="Иконка проекта"),
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False, comment="Идентификатор"
        ),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.id"],
        ),
        sa.ForeignKeyConstraint(["icon_id"], ["icons.id"], ondelete="SET DEFAULT"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "company_id", name="uq_project_name"),
        sa.UniqueConstraint("prefix", "company_id", name="uq_project_prefix"),
        comment="Таблица проектов",
    )
    op.create_table(
        "boards",
        sa.Column("name", sa.String(length=255), nullable=False, comment="Имя доски"),
        sa.Column("description", sa.String(), nullable=True, comment="Описание доски"),
        sa.Column("project_id", sa.Uuid(), nullable=False, comment="идентификатор проекта"),
        sa.Column("archived_at", sa.TIMESTAMP(), nullable=True, comment="Дата архивации"),
        sa.Column(
            "created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False, comment="Дата создания"
        ),
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False, comment="Идентификатор"
        ),
        sa.ForeignKeyConstraint(["project_id"], ["projects.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("project_id", "name", name="uq_board_name"),
        comment="Модель доски для учета задач.",
    )
    op.create_table(
        "boards_templates",
        sa.Column("name", sa.String(length=255), nullable=False, comment="Имя шаблона доски"),
        sa.Column("description", sa.String(), nullable=True, comment="Описание доски"),
        sa.Column("company_id", sa.Uuid(), nullable=True, comment="Идентификатор организации"),
        sa.Column("project_id", sa.Uuid(), nullable=True, comment="Идентификатор проекта"),
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False, comment="Идентификатор"
        ),
        sa.CheckConstraint(
            "(company_id IS NOT NULL AND project_id IS NULL) OR (company_id IS NULL AND project_id IS NOT NULL)",
            name="chk_company_or_project",
        ),
        sa.ForeignKeyConstraint(["company_id"], ["companies.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["project_id"], ["projects.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("company_id", "name", name="uq_board_template_name_for_company"),
        sa.UniqueConstraint("project_id", "name", name="uq_board_template_name_for_project"),
        comment="Таблица шаблонов досок",
    )
    op.create_table(
        "files_in_groups",
        sa.Column("file_id", sa.Uuid(), nullable=False, comment="Идентификатор файла"),
        sa.Column("files_group_id", sa.Uuid(), nullable=False, comment="Идентификатор группы файлов"),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Время добавления файла в группу",
        ),
        sa.Column("id", sa.BIGINT(), nullable=False, comment="Идентификатор"),
        sa.ForeignKeyConstraint(["file_id"], ["files.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["files_group_id"], ["files_groups.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("file_id", "files_group_id", name="uq_file_in_group"),
        comment="Привязка файла к группе",
    )
    op.create_table(
        "last_read_message_by_user",
        sa.Column("message_id", sa.BIGINT(), nullable=False, comment="Идентификатор сообщения"),
        sa.Column("user_id", sa.Uuid(), nullable=False, comment="Идентификатор пользователя"),
        sa.Column("channel_id", sa.Uuid(), nullable=True, comment="Идентификатор канала"),
        sa.Column("thread_id", sa.BIGINT(), nullable=True, comment="Идентификатор треда"),
        sa.Column("id", sa.BIGINT(), nullable=False, comment="Идентификатор"),
        sa.ForeignKeyConstraint(["channel_id"], ["channels.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["message_id"], ["messages.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["thread_id"], ["threads.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "channel_id", name="uq_last_read_message_by_user_chanel"),
        comment="Таблица хранящая последнее прочитанное сообщение в чате для пользователя.",
    )
    op.create_table(
        "sprints",
        sa.Column("name", sa.String(length=100), nullable=False, comment="Название спринта"),
        sa.Column("description", sa.String(), nullable=False, comment="Описание/цель спринта"),
        sa.Column("project_id", sa.Uuid(), nullable=False, comment="Идентификатор проекта"),
        sa.Column("start_date", sa.TIMESTAMP(), nullable=True, comment="Время начала спринта"),
        sa.Column("end_date", sa.TIMESTAMP(), nullable=True, comment="Время завершения спринта"),
        sa.Column(
            "status",
            sa.Enum("Планирование", "Активный", "Завершенный", name="sprint_status"),
            nullable=False,
            comment="Статус спринта",
        ),
        sa.Column("story_points", sa.BIGINT(), nullable=True, comment="Стори поинты спринта"),
        sa.Column("id", sa.BIGINT(), nullable=False, comment="Идентификатор"),
        sa.ForeignKeyConstraint(["project_id"], ["projects.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        comment="Модель спринта.",
    )
    op.create_table(
        "tags",
        sa.Column("name", sa.String(length=30), nullable=False, comment="Название тега"),
        sa.Column("description", sa.String(), nullable=False, comment="Описание тега"),
        sa.Column("company_id", sa.Uuid(), nullable=True, comment="Идентификатор организации"),
        sa.Column("project_id", sa.Uuid(), nullable=True, comment="Идентификатор проекта"),
        sa.Column("color", sa.String(length=9), nullable=False, comment="Цвет тега"),
        sa.Column("id", sa.BIGINT(), nullable=False, comment="Идентификатор"),
        sa.CheckConstraint(
            "(company_id IS NOT NULL AND project_id IS NULL) OR (company_id IS NULL AND project_id IS NOT NULL)",
            name="chk_project_or_company",
        ),
        sa.ForeignKeyConstraint(["company_id"], ["companies.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["project_id"], ["projects.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "company_id", name="uq_tag_name_by_company"),
        sa.UniqueConstraint("name", "project_id", name="uq_tag_name_by_project"),
        comment="Теги",
    )
    op.create_table(
        "task_types",
        sa.Column("name", sa.String(length=100), nullable=False, comment="Наименование типа задачи"),
        sa.Column("description", sa.String(), nullable=False, comment="Описание типа задачи"),
        sa.Column("icon_id", sa.BIGINT(), nullable=False, comment="Идентификатор иконки"),
        sa.Column("company_id", sa.Uuid(), nullable=True, comment="Идентификатор организации"),
        sa.Column("project_id", sa.Uuid(), nullable=True, comment="Идентификатор проекта"),
        sa.Column("id", sa.BIGINT(), nullable=False, comment="Идентификатор"),
        sa.CheckConstraint(
            "(company_id IS NOT NULL AND project_id IS NULL) OR (company_id IS NULL AND project_id IS NOT NULL)",
            name="chk_company_or_project",
        ),
        sa.ForeignKeyConstraint(["company_id"], ["companies.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["icon_id"], ["icons.id"], ondelete="SET DEFAULT"),
        sa.ForeignKeyConstraint(["project_id"], ["projects.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "company_id", name="uq_task_type_name_for_company"),
        sa.UniqueConstraint("name", "project_id", name="uq_task_type_name_for_project"),
        comment="Пополняемый классификатор типов задач",
    )
    op.create_table(
        "boards_columns",
        sa.Column("name", sa.String(length=100), nullable=False, comment="Имя столбца"),
        sa.Column("description", sa.String(), nullable=True, comment="Описание столбца"),
        sa.Column("board_id", sa.Uuid(), nullable=False, comment="Идентификатор доски"),
        sa.Column("number", sa.SMALLINT(), nullable=False, comment="Номер столбца по порядку"),
        sa.Column("color", sa.String(length=9), nullable=False, comment="Цвет столбца"),
        sa.Column(
            "max_task",
            sa.SMALLINT(),
            server_default=sa.text("0"),
            nullable=False,
            comment="Ограничение по числу задач в столбце",
        ),
        sa.Column(
            "mark_task_as_completed",
            sa.Boolean(),
            server_default=sa.text("false"),
            nullable=False,
            comment="Автоматический помечать задачу как выполненную при перемещение в столбец",
        ),
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False, comment="Идентификатор"
        ),
        sa.ForeignKeyConstraint(
            ["board_id"],
            ["boards.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("board_id", "name", name="uq_column_name"),
        comment="Таблица столбца доски",
    )
    op.create_table(
        "boards_templates_columns",
        sa.Column("board_template_id", sa.Uuid(), nullable=False, comment="Идентификатор шаблона доски"),
        sa.Column("name", sa.String(length=100), nullable=False, comment="Имя столбца"),
        sa.Column("description", sa.String(), nullable=True, comment="Описание столбца"),
        sa.Column("number", sa.SMALLINT(), nullable=False, comment="Номер столбца по порядку"),
        sa.Column("color", sa.String(length=9), nullable=False, comment="Цвет столбца"),
        sa.Column(
            "max_task",
            sa.SMALLINT(),
            server_default=sa.text("0"),
            nullable=False,
            comment="Ограничение по числу задач в столбце",
        ),
        sa.Column(
            "mark_task_as_completed",
            sa.Boolean(),
            server_default=sa.text("false"),
            nullable=False,
            comment="Автоматический помечать задачу как выполненную при перемещение в столбец",
        ),
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False, comment="Идентификатор"
        ),
        sa.ForeignKeyConstraint(["board_template_id"], ["boards_templates.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("board_template_id", "name", name="uq_board_templates_name"),
        comment="Таблица столбцов для шаблонов досок",
    )
    op.create_table(
        "files_tags",
        sa.Column("tag_id", sa.BIGINT(), nullable=False, comment="Идентификатор тега"),
        sa.Column("file_id", sa.Uuid(), nullable=False, comment="Идентификатор файла"),
        sa.Column("id", sa.BIGINT(), nullable=False, comment="Идентификатор"),
        sa.ForeignKeyConstraint(["file_id"], ["files.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["tag_id"], ["tags.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("tag_id", "file_id", name="uq_file_tag"),
        comment="Теги на файлах",
    )
    op.create_table(
        "tasks",
        sa.Column("name", sa.String(length=255), nullable=False, comment="Название задачи"),
        sa.Column("description", sa.String(), nullable=False, comment="Описание задачи"),
        sa.Column("creator_id", sa.Uuid(), nullable=False, comment="Идентификатор автора задачи"),
        sa.Column(
            "assignee_id", sa.Uuid(), nullable=True, comment="Идентификатор пользователя которому назначена задача"
        ),
        sa.Column("column_id", sa.Uuid(), nullable=True, comment="Идентификатор столбца"),
        sa.Column("project_id", sa.Uuid(), nullable=False, comment="Идентификатор проекта"),
        sa.Column("color", sa.String(length=9), nullable=False, comment="Цвет задачи"),
        sa.Column("deadline", sa.TIMESTAMP(), nullable=True, comment="Выполнить до"),
        sa.Column("task_type_id", sa.BIGINT(), nullable=False, comment="Идентификатор типа задачи"),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False, comment="Создана"),
        sa.Column("updated_at", sa.TIMESTAMP(), nullable=True, comment="Обновлена"),
        sa.Column("completed_at", sa.TIMESTAMP(), nullable=True, comment="Выполнена"),
        sa.Column("archived_at", sa.TIMESTAMP(), nullable=True, comment="Архивирована"),
        sa.Column(
            "archived_by_id", sa.Uuid(), nullable=True, comment="Идентификатор пользователя архивировавшего задачу"
        ),
        sa.Column("time_estimate", sa.BIGINT(), nullable=True, comment="Оценка времени выполнения"),
        sa.Column("story_points", sa.BIGINT(), nullable=True, comment="Оценка задачи в story points"),
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False, comment="Идентификатор"
        ),
        sa.ForeignKeyConstraint(["archived_by_id"], ["users.id"], ondelete="SET DEFAULT"),
        sa.ForeignKeyConstraint(["assignee_id"], ["users.id"], ondelete="SET DEFAULT"),
        sa.ForeignKeyConstraint(["column_id"], ["boards_columns.id"], ondelete="RESTRICT"),
        sa.ForeignKeyConstraint(["creator_id"], ["users.id"], ondelete="SET DEFAULT"),
        sa.ForeignKeyConstraint(["project_id"], ["projects.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["task_type_id"], ["task_types.id"], ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("project_id", "name", name="uq_task_name"),
        comment="Задача",
    )
    op.create_table(
        "child_tasks",
        sa.Column("parent_task_id", sa.Uuid(), nullable=False, comment="Идентификатор родительской задачи"),
        sa.Column("child_task_id", sa.Uuid(), nullable=False, comment="Идентификатор дочерней задачи"),
        sa.Column("id", sa.BIGINT(), nullable=False, comment="Идентификатор"),
        sa.ForeignKeyConstraint(["child_task_id"], ["tasks.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["parent_task_id"], ["tasks.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        comment="Дочерние задачи.",
    )
    op.create_table(
        "linked_tasks",
        sa.Column("from_task_id", sa.Uuid(), nullable=False, comment="Задача с которой стоит связь"),
        sa.Column("to_task_id", sa.Uuid(), nullable=False, comment="Задача на которую стоит связь"),
        sa.Column("task_link_type_id", mysql.SMALLINT(), nullable=False, comment="Тип связи"),
        sa.Column("id", sa.BIGINT(), nullable=False, comment="Идентификатор"),
        sa.ForeignKeyConstraint(["from_task_id"], ["tasks.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["task_link_type_id"], ["task_link_types.id"], ondelete="RESTRICT"),
        sa.ForeignKeyConstraint(["to_task_id"], ["tasks.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        comment="Связанные задачи.",
    )
    op.create_table(
        "task_attachments",
        sa.Column("task_id", sa.Uuid(), nullable=False, comment="Идентификатор задачи"),
        sa.Column("file_id", sa.Uuid(), nullable=False, comment="Идентификатор файла"),
        sa.Column("id", sa.BIGINT(), nullable=False, comment="Идентификатор"),
        sa.ForeignKeyConstraint(["file_id"], ["files.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["task_id"], ["tasks.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("task_id", "file_id", name="uq_task_attachment"),
        comment="Файлы прикрепленные к задаче",
    )
    op.create_table(
        "task_comments",
        sa.Column("task_id", sa.Uuid(), nullable=False, comment="Идентификатор задачи"),
        sa.Column("user_id", sa.Uuid(), nullable=False, comment="Идентификатор пользователя создавшего комментарий"),
        sa.Column("content", sa.String(), nullable=False, comment="Содержание комментария"),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Дата и время создания комментария",
        ),
        sa.Column(
            "updated_at", sa.TIMESTAMP(), nullable=True, comment="Дата и время последнего обновления комментария"
        ),
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False, comment="Идентификатор"
        ),
        sa.ForeignKeyConstraint(["task_id"], ["tasks.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="SET DEFAULT"),
        sa.PrimaryKeyConstraint("id"),
        comment="Модель комментария к задаче.",
    )
    op.create_table(
        "task_time_spend",
        sa.Column("description", sa.String(), nullable=False, comment="Описание"),
        sa.Column("task_id", sa.Uuid(), nullable=False, comment="Идентификатор задачи"),
        sa.Column("time_spend", sa.BIGINT(), nullable=False, comment="Потраченое время в минутах"),
        sa.Column("id", sa.BIGINT(), nullable=False, comment="Идентификатор"),
        sa.ForeignKeyConstraint(["task_id"], ["tasks.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        comment="Учет времени потраченного на задачу.",
    )
    op.create_table(
        "tasks_sprints",
        sa.Column("sprint_id", sa.BIGINT(), nullable=False, comment="Идентификатор спринта"),
        sa.Column("task_id", sa.Uuid(), nullable=False, comment="Идентификатор задачи"),
        sa.Column("id", sa.BIGINT(), nullable=False, comment="Идентификатор"),
        sa.ForeignKeyConstraint(["sprint_id"], ["sprints.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["task_id"], ["tasks.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        comment="Задачи спринта.",
    )
    op.create_table(
        "tasks_tags",
        sa.Column("tag_id", sa.BIGINT(), nullable=False, comment="Идентификатор тега"),
        sa.Column("task_id", sa.Uuid(), nullable=False, comment="Идентификатор задачи"),
        sa.Column("id", sa.BIGINT(), nullable=False, comment="Идентификатор"),
        sa.ForeignKeyConstraint(["tag_id"], ["tags.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["task_id"], ["tasks.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("tag_id", "task_id", name="uq_task_tag"),
        comment="Теги на задачах",
    )
    op.create_table(
        "comment_attachments",
        sa.Column("task_comment_id", sa.Uuid(), nullable=False, comment="Идентификатор комментария"),
        sa.Column("file_id", sa.Uuid(), nullable=False, comment="Идентификатор файла"),
        sa.Column("id", sa.BIGINT(), nullable=False, comment="Идентификатор"),
        sa.ForeignKeyConstraint(["file_id"], ["files.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["task_comment_id"], ["task_comments.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("task_comment_id", "file_id", name="uq_comment_attachment"),
        comment="Файлы прикрепленные к комментариям",
    )

    op.create_foreign_key(
        "fk_messages_thread_id_threads", "messages", "threads", ["thread_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        "fk_threads_parent_message_id_messages",
        "threads",
        "messages",
        ["parent_message_id"],
        ["id"],
        ondelete="SET DEFAULT",
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("comment_attachments")
    op.drop_table("tasks_tags")
    op.drop_table("tasks_sprints")
    op.drop_table("task_time_spend")
    op.drop_table("task_comments")
    op.drop_table("task_attachments")
    op.drop_table("linked_tasks")
    op.drop_table("child_tasks")
    op.drop_table("tasks")
    op.drop_table("files_tags")
    op.drop_table("boards_templates_columns")
    op.drop_table("boards_columns")
    op.drop_table("task_types")
    op.drop_table("tags")
    op.drop_table("sprints")
    op.drop_table("last_read_message_by_user")
    op.drop_table("files_in_groups")
    op.drop_table("boards_templates")
    op.drop_table("boards")
    op.drop_table("projects")
    op.drop_table("message_attachments")
    op.drop_table("files_groups")
    op.drop_table("company_users_roles")
    op.drop_table("channels")
    op.drop_table("user_company_membership")
    op.drop_table("subject_permissions_to_object")
    op.drop_table("roles")
    op.drop_table("logs")
    op.drop_table("icons")
    op.drop_table("files")
    op.drop_table("channels_groups")
    op.drop_table("users")
    op.drop_table("permissions")
    op.drop_table("companies")
    op.drop_table("timezones")
    op.drop_table("threads")
    op.drop_table("task_link_types")
    op.drop_table("project_types")
    op.drop_table("messages")
    op.drop_table("event_types")
    op.drop_table("context_types")
    # ### end Alembic commands ###
